.import _systab
.include "include/cpu.i65"
.include "include/errno.i65"
.include "include/syscall.i65"
.p816

.scope exec

.segment "CODE"

.export syscall
; C = syscall#
syscall:
	; Caller must ensure this!
	.a16
	.i16
	cmp #syscall::__max
	bcs @enosys
	asl
	tax
	; Switch to system direct page, saving the current task on stack
	phd
	lda #$0000
	tcd
	jmp (_systab,x)
@enosys:
	lda #ENOSYSCALL
	plp
	sec
	php
	rti

.export nmi
nmi:
	rti

.export irq
irq:
	rti

.export debug
debug:

.export abort
abort:

.export panic
; Dump CPU state on the stack, and set crash signature for hardware debugger
; before stopping the CPU, waiting for external ~RESET.
;
; FIXME: Enter machine monitor when we have a working console device.
panic:
	rep #CPU_M|CPU_X
	.a16
	.i16
	pha
	phx
	phy
	phd
	phb
	tsx
	stx $10
	lda #$adde
	sta $0a
	lda #$efbe
	sta $0c
	lda #$feca
	sta $0e
	stp
.endscope
